## Build APIs
# This workflow is responsible for building Kong Gateway configurations for each API
# It is called by the main build-deploy workflow and runs in parallel for each API defined in the entity's metadata.json file

# Key responsibilities:
# 1. Processes OpenAPI specifications for each API version
# 2. Applies entity-specific Kong Gateway configurations
# 3. Validates configurations against governance rules
# 4. Generates deployable Kong Gateway configurations
# 5. Runs as a matrix job to handle multiple APIs concurrently

# Workflow inputs:
# - entity: The entity (e.g., tripwhiz, roameasy) to build configurations for
# - environment: Target environment (development, acceptance, production)
# - apis: JSON array of API configurations from the entity's metadata

# Main outputs:
# - Generates artifact files containing Kong Gateway configurations for each API
# - Each artifact follows the pattern: artifacts-{entity}-{environment}-{api-name}-{version}

# Environment variables:
# - Sets up paths for entity-specific Kong configurations
# - Configures build-time variables for deck commands
# - Establishes API endpoints and authentication settings


name: Build APIs

on:
  workflow_call:
    inputs:
      entity:
        required: true
        type: string
      environment:
        required: true
        type: string
      apis:
        required: true
        type: string
    secrets:
      KONNECT_TOKEN:
        required: true

env:
  ENTITIES_DIR_KONG: ${{ github.workspace }}/entities/.common/kong
  ENTITY_DIR_KONG: ${{ github.workspace }}/entities/${{ inputs.entity }}/kong
  OUTPUT_DIR: ${{ github.workspace }}/.generated
  GOVERNANCE_DIR: ${{ github.workspace }}/governance

jobs:
  build:
    name: Build ${{ matrix.api.name }}-${{ matrix.api.version }} on ${{ inputs.entity }} ${{ inputs.environment }}
    runs-on: ubuntu-latest
    env:
      API_SPEC: ${{ github.workspace }}/apis/${{ matrix.api.name }}/${{ matrix.api.version }}/openapi.yaml
      API_KONG_DIR: ${{ github.workspace }}/apis/${{ matrix.api.name }}/${{ matrix.api.version }}/kong
      DECK_API_NAME: ${{ matrix.api.name }}
      DECK_API_VERSION: ${{ matrix.api.version }}
      DECK_API_URL: https://${{ inputs.entity }}-${{ inputs.environment }}.${{ matrix.api.name }}.svc.cluster.local:8000
      DECK_FILE_NAMESPACE_PATH_PREFIX: ${{ matrix.api.namespace }}
      DECK_SERVICE_ENABLED: ${{ matrix.api.enabled }}
      DECK_ENTITY_NAME: ${{ inputs.entity }}-${{ inputs.environment }}
      DECK_CONFIG_OIDC_ISSUER: https://auth-${{ inputs.entity }}-${{ inputs.environment }}.myidp.com/auth/realms/master/.well-known/openid-configuration
    strategy:
      matrix:
        api: ${{ fromJson(inputs.apis) }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v4

      - uses: kong/setup-deck@v1

      - name: Lint OpenAPI Spec
        run: |
          deck file lint -s $API_SPEC $GOVERNANCE_DIR/openapi.ruleset.yaml

      - name: Convert OpenAPI Spec to Kong declarative config
        run: |
          cat ${{ env.API_SPEC }} | deck file openapi2kong --generate-security -o $OUTPUT_DIR/${{ matrix.api.name }}-${{ matrix.api.version }}-kong.yaml

      - name: Add plugins
        run: |
          plugin_folders=(
            "${{ env.ENTITIES_DIR_KONG }}/plugins"
            "${{ env.ENTITY_DIR_KONG }}/plugins"
            "${{ env.API_KONG_DIR }}/plugins"
          )

          for plugin_folder in "${plugin_folders[@]}"; do
            if [ -d "$plugin_folder" ] && [ "$(ls -A $plugin_folder/*.yaml 2>/dev/null)" ]; then
              cat $OUTPUT_DIR/${{ matrix.api.name }}-${{ matrix.api.version }}-kong.yaml | deck file add-plugins $plugin_folder/*.yaml -o $OUTPUT_DIR/${{ matrix.api.name }}-${{ matrix.api.version }}-kong.yaml
            fi
          done

      - name: Apply patches
        run: |
          patch_folders=(
            "${{ env.ENTITIES_DIR_KONG }}/patches"
            "${{ env.ENTITY_DIR_KONG }}/patches"
            "${{ env.API_KONG_DIR }}/patches"
          )

          for patch_folder in "${patch_folders[@]}"; do
            if [ -d "$patch_folder" ] && [ "$(ls -A $patch_folder/*.yaml 2>/dev/null)" ]; then
              cat $OUTPUT_DIR/${{ matrix.api.name }}-${{ matrix.api.version }}-kong.yaml | deck file patch $patch_folder/*.yaml -o $OUTPUT_DIR/${{ matrix.api.name }}-${{ matrix.api.version }}-kong.yaml
            fi
          done

      - name: Add namespace if required
        run: |
          if [ -n "$DECK_FILE_NAMESPACE_PATH_PREFIX" ] || [ -n "$DECK_FILE_NAMESPACE_HOST" ]; then
            cmd="deck file namespace"
            if [ -n "$DECK_FILE_NAMESPACE_PATH_PREFIX" ]; then
              cmd="$cmd --path-prefix=$DECK_FILE_NAMESPACE_PATH_PREFIX"
            fi
            if [ -n "$DECK_FILE_NAMESPACE_HOST" ]; then
              cmd="$cmd --host=$DECK_FILE_NAMESPACE_HOST"
            fi
            cat $OUTPUT_DIR/${{ matrix.api.name }}-${{ matrix.api.version }}-kong.yaml | $cmd -o $OUTPUT_DIR/${{ matrix.api.name }}-${{ matrix.api.version }}-kong.yaml
          else
            echo "Skipping namespace step as both path-prefix and host are empty."
          fi
        working-directory: ${{ env.OUTPUT_DIR }}

      - name: Add Tags
        run: |
          cat $OUTPUT_DIR/${{ matrix.api.name }}-${{ matrix.api.version }}-kong.yaml | deck file add-tags $DECK_API_NAME $DECK_API_VERSION -o $OUTPUT_DIR/${{ matrix.api.name }}-${{ matrix.api.version }}-kong.yaml
        working-directory: ${{ env.ENTITY_DIR_KONG }}

      - name: Render Kong Gateway configuration
        run: |
          deck file render --populate-env-vars $OUTPUT_DIR/${{ matrix.api.name }}-${{ matrix.api.version }}-kong.yaml \
            -o $OUTPUT_DIR/${{ matrix.api.name }}-${{ matrix.api.version }}-kong.yaml
        working-directory: ${{ env.OUTPUT_DIR }}

      - name: Validate Generated Kong Gateway configuration
        run: deck file validate $OUTPUT_DIR/${{ matrix.api.name }}-${{ matrix.api.version }}-kong.yaml
        working-directory: ${{ env.OUTPUT_DIR }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-${{ inputs.entity }}-${{ inputs.environment }}-${{ matrix.api.name }}-${{ matrix.api.version }}
          path: |
            ${{ env.OUTPUT_DIR }}/${{ matrix.api.name }}-${{ matrix.api.version }}-kong.yaml 