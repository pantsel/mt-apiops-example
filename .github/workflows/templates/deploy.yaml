name: Deploy API Configurations

on:
  workflow_call:
    inputs:
      entity:
        required: true
        type: string
      environment:
        required: true
        type: string
    secrets:
      KONNECT_TOKEN:
        required: true

env:
  KONNECT_API_URL: https://eu.api.konghq.com
  KONNECT_CONTROL_PLANE_NAME: ${{ inputs.entity }}-${{ inputs.environment }}
  APIS_DIR: ${{ github.workspace }}/apis
  ENTITIES_DIR: ${{ github.workspace }}/entities
  ENTITIES_DIR_KONG: ${{ github.workspace }}/entities/.common/kong
  ENTITIES_ENV_VARS: ${{ github.workspace }}/entities/environments/${{ inputs.environment }}/env.sh
  ENTITIES_COMMON_VARS: ${{ github.workspace }}/entities/.common/env.sh
  ENTITY_DIR: ${{ github.workspace }}/entities/${{ inputs.entity }}
  ENTITY_DIR_KONG: ${{ github.workspace }}/entities/${{ inputs.entity }}/kong
  ENTITY_METADATA: ${{ github.workspace }}/entities/${{ inputs.entity }}/environments/${{ inputs.environment }}/metadata.json
  ENTITY_ENV_VARS: ${{ github.workspace }}/entities/${{ inputs.entity }}/environments/${{ inputs.environment }}/env.sh
  ENTITY_COMMON_VARS: ${{ github.workspace }}/entities/${{ inputs.entity }}/env.sh
  OUTPUT_DIR: ${{ github.workspace }}/.generated
  GOVERNANCE_DIR: ${{ github.workspace }}/governance
  GOVERNANCE_ENV_VARS: ${{ github.workspace }}/governance/environments/${{ inputs.environment }}/env.sh
  GOVERNANCE_COMMON_VARS: ${{ github.workspace }}/governance/env.sh
  DECK_CONFIG_OIDC_ISSUER: https://auth-${{ inputs.entity }}-${{ inputs.environment }}.myidp.com/auth/realms/master/.well-known/openid-configuration

jobs:
  deploy:
    name: Deploy combined Kong Gateway configuration on ${{ inputs.entity }} ${{ inputs.environment }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v4

      - uses: kong/setup-deck@v1

      - name: Download combined Kong Gateway configuration
        uses: actions/download-artifact@v4
        with:
          name: kong-combined
          path: ${{ env.OUTPUT_DIR }}/kong-combined.yaml

      - name: Get a backup of the previous Kong Gateway configuration
        run: |
          deck gateway dump \
            --select-tag generated_by:apiops \
            --konnect-addr="${{ env.KONNECT_API_URL }}" \
            --konnect-token="${{ secrets.KONNECT_TOKEN }}" \
            --konnect-control-plane-name="${{ env.KONNECT_CONTROL_PLANE_NAME }}" -o ${{ env.OUTPUT_DIR }}/kong_backup.yaml

      - name: Sync Kong Gateway configuration
        id: sync
        run: |
          deck gateway sync ${{ env.OUTPUT_DIR }}/kong-combined.yaml  \
            --no-mask-deck-env-vars-value \
            --konnect-addr="${{ env.KONNECT_API_URL }}" \
            --konnect-token="${{ secrets.KONNECT_TOKEN }}" \
            --konnect-control-plane-name="${{ env.KONNECT_CONTROL_PLANE_NAME }}"
        continue-on-error: true

      - name: Wait for changes to be propagated
        if: ${{ steps.sync.outcome == 'success' }}
        run: |
          sleep 5

      - name: Test the API
        if: ${{ steps.sync.outcome == 'success' }}
        id: test
        run: |
          # Add tests to check the API is working
          echo "API is working"
          exit 0
        continue-on-error: true

      - name: Revert to backup if sync or tests fail
        if: ${{ steps.sync.outcome == 'failure' || steps.test.outcome == 'failure' }}
        run: |
          deck gateway sync ${{ env.OUTPUT_DIR }}/kong_backup.yaml  \
            --no-mask-deck-env-vars-value \
            --konnect-addr="${{ env.KONNECT_API_URL }}" \
            --konnect-token="${{ secrets.KONNECT_TOKEN }}" \
            --konnect-control-plane-name="${{ env.KONNECT_CONTROL_PLANE_NAME }}"

      - name: Get recent backup
        if: ${{ steps.test.outcome == 'success' }}
        run: |
          deck gateway dump \
            --yes \
            --select-tag generated_by:apiops \
            --konnect-addr="${{ env.KONNECT_API_URL }}" \
            --konnect-token="${{ secrets.KONNECT_TOKEN }}" \
            --konnect-control-plane-name="${{ env.KONNECT_CONTROL_PLANE_NAME }}" -o ${{ env.OUTPUT_DIR }}/kong_backup.yaml

      - name: Upload backup
        uses: actions/upload-artifact@v4
        with:
          name: backup
          path: ${{ env.OUTPUT_DIR }}/kong_backup.yaml 