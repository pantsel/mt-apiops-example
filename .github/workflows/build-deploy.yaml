name: Build and Deploy

on:
  workflow_dispatch:
    inputs:
      entity:
        required: true
        type: choice
        description: "The entity to build the configuration for"
        options:
          - tripwhiz
          - roameasy
      environment:
        required: true
        type: choice
        description: "The environment to build the configuration for"
        options:
          - development
          - acceptance
          - production
        default: development
      show-summary:
        required: false
        type: boolean
        description: "Show the summary of the build and deploy process"
        default: true

# Prevent multiple deployments to the same environment at the same time
concurrency:
  group: ${{ github.workflow }}-${{ inputs.entity }}-${{ inputs.environment }}
  cancel-in-progress: true

jobs:
  get-apis:
    runs-on: ubuntu-latest
    outputs:
      apis: ${{ steps.get-apis.outputs.apis }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/get-apis
        id: get-apis
        with:
          entity: ${{ inputs.entity }}
          environment: ${{ inputs.environment }}
          entity_metadata: ./entities/${{ inputs.entity }}/environments/${{ inputs.environment }}/metadata.json
          konnect_token: ${{ secrets.KONNECT_TOKEN }}

  build:
    needs: get-apis
    uses: ./.github/workflows/build.yaml
    with:
      entity: ${{ inputs.entity }}
      environment: ${{ inputs.environment }}
      apis: ${{ needs.get-apis.outputs.apis }}
    secrets:
      KONNECT_TOKEN: ${{ secrets.KONNECT_TOKEN }}

  combine:
    needs: [get-apis, build]
    uses: ./.github/workflows/combine.yaml
    with:
      entity: ${{ inputs.entity }}
      environment: ${{ inputs.environment }}
      show_summary: ${{ inputs.show-summary }}
    secrets:
      KONNECT_TOKEN: ${{ secrets.KONNECT_TOKEN }}

  deploy:
    needs: combine
    uses: ./.github/workflows/deploy.yaml
    with:
      entity: ${{ inputs.entity }}
      environment: ${{ inputs.environment }}
    secrets:
      KONNECT_TOKEN: ${{ secrets.KONNECT_TOKEN }}