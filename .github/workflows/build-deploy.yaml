name: Build and Deploy

on:
  workflow_dispatch:
    inputs:
      entity:
        required: true
        type: choice
        description: "The entity to build the configuration for"
        options:
          - tripwhiz
          - roameasy
      environment:
        required: true
        type: choice
        description: "The environment to build the configuration for"
        options:
          - development
          - acceptance
          - production
        default: development
      show-summary:
        required: false
        type: boolean
        description: "Show the summary of the build and deploy process"
        default: true

# Prevent multiple deployments to the same environment at the same time
concurrency:
  group: ${{ github.workflow }}-${{ inputs.entity }}-${{ inputs.environment }}
  cancel-in-progress: true

env:
  ENTITIES_DIR_KONG: ${{ github.workspace }}/entities/.common/kong
  ENTITY_DIR_KONG: ${{ github.workspace }}/entities/${{ inputs.entity }}/kong
  OUTPUT_DIR: ${{ github.workspace }}/.generated
  GOVERNANCE_DIR: ${{ github.workspace }}/governance
  DECK_ENTITY_NAME: ${{ inputs.entity }}-${{ inputs.environment }}
  DECK_CONFIG_OIDC_ISSUER: https://auth-${{ inputs.entity }}-${{ inputs.environment }}.myidp.com/auth/realms/master/.well-known/openid-configuration
  DECK_CONFIG_OTEL_SERVICE_NAME: kong-dp-${{ inputs.entity }}-${{ inputs.environment }}
  DECK_CONFIG_OTEL_TRACES_ENDPOINT: https://otel-${{ inputs.entity }}-${{ inputs.environment }}.local:4318/v1/traces

jobs:
  get-apis:
    runs-on: ubuntu-latest
    outputs:
      apis: ${{ steps.get-apis.outputs.apis }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/get-apis
        id: get-apis
        with:
          entity: ${{ inputs.entity }}
          environment: ${{ inputs.environment }}
          entity_metadata: ./entities/${{ inputs.entity }}/environments/${{ inputs.environment }}/metadata.json
          konnect_token: ${{ secrets.KONNECT_TOKEN }}
    
  build:
    needs: get-apis
    runs-on: ubuntu-latest
    strategy:
      matrix:
        api: ${{ fromJson(needs.get-apis.outputs.apis) }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/build
        with:
          entity: ${{ inputs.entity }}
          environment: ${{ inputs.environment }}
          api_spec: ${{ github.workspace }}/apis/${{ matrix.api.name }}/${{ matrix.api.version }}/openapi.yaml
          api_name: ${{ matrix.api.name }}
          api_version: ${{ matrix.api.version }}
          api_namespace: ${{ matrix.api.namespace }}
          api_enabled: ${{ matrix.api.enabled }}
          konnect_token: ${{ secrets.KONNECT_TOKEN }}
        env:
          API_KONG_DIR: ${{ github.workspace }}/apis/${{ matrix.api.name }}/${{ matrix.api.version }}/kong
          DECK_API_NAME: ${{ matrix.api.name }}
          DECK_API_VERSION: ${{ matrix.api.version }}
          DECK_API_URL: https://${{ inputs.entity }}-${{ inputs.environment }}.${{ matrix.api.name }}.svc.cluster.local:8000
          DECK_FILE_NAMESPACE_PATH_PREFIX: ${{ matrix.api.namespace }}
          DECK_SERVICE_ENABLED: ${{ matrix.api.enabled }}

  combine:
    needs: [get-apis, build]
    runs-on: ubuntu-latest
    outputs:
      combined_config: ${{ steps.combine.outputs.combined_config }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/combine
        id: combine
        with:
          entity: ${{ inputs.entity }}
          environment: ${{ inputs.environment }}
          show_summary: ${{ inputs.show-summary }}
          konnect_token: ${{ secrets.KONNECT_TOKEN }}
  deploy:
    needs: combine
    uses: ./.github/workflows/deploy.yaml
    with:
      entity: ${{ inputs.entity }}
      environment: ${{ inputs.environment }}
    secrets:
      KONNECT_TOKEN: ${{ secrets.KONNECT_TOKEN }}