# Deploy APIs
# This action is responsible for deploying the combined Kong Gateway configuration for the given entity and environment
# It is called by the main build-deploy workflow and runs in parallel for each API defined in the entity's metadata.json file

# Key responsibilities:
# 1. Downloads the combined Kong Gateway configuration
# 2. Syncs the configuration to the Kong Gateway
# 3. Tests the API
# 4. Reverts to the previous configuration if the sync or tests fail
# 5. Uploads a backup of the Kong Gateway configuration

# Action inputs:
# - entity: The entity (e.g., tripwhiz, roameasy) to deploy configurations for
# - environment: Target environment (development, acceptance, production)
# - konnect_token: Konnect API token
# Main outputs:
# - Generates a backup of the Kong Gateway configuration
# - Each artifact follows the pattern: backup-{entity}-{environment}.yaml


name: "Deploy API Configurations"
description: "Deploys the combined Kong Gateway configuration for the given entity and environment"

inputs:
  entity:
    description: "The entity (e.g., tripwhiz, roameasy) to deploy configurations for"
    required: true
  environment:
    description: "Target environment (development, acceptance, production)"
    required: true
  konnect_token:
    description: "Konnect API token"
    required: true

runs:
  using: "composite"
  steps:
    - uses: kong/setup-deck@v1

    - name: Download combined Kong Gateway configuration
      uses: actions/download-artifact@v4
      with:
        name: kong-combined
        path: ${{ env.OUTPUT_DIR }}/kong-combined.yaml

    - name: Get a backup of the previous Kong Gateway configuration
      shell: bash
      run: |
        deck gateway dump \
          --select-tag generated_by:apiops \
          --konnect-addr="${{ env.KONNECT_API_URL }}" \
          --konnect-token="${{ inputs.konnect_token }}" \
          --konnect-control-plane-name="${{ env.KONNECT_CONTROL_PLANE_NAME }}" -o ${{ env.OUTPUT_DIR }}/kong_backup.yaml

    - name: Sync Kong Gateway configuration
      id: sync
      shell: bash
      run: |
        deck gateway sync ${{ env.OUTPUT_DIR }}/kong-combined.yaml  \
          --no-mask-deck-env-vars-value \
          --konnect-addr="${{ env.KONNECT_API_URL }}" \
          --konnect-token="${{ inputs.konnect_token }}" \
          --konnect-control-plane-name="${{ env.KONNECT_CONTROL_PLANE_NAME }}"
      continue-on-error: true

    - name: Wait for changes to be propagated
      if: ${{ steps.sync.outcome == 'success' }}
      shell: bash
      run: |
        sleep 5

    - name: Test the API
      if: ${{ steps.sync.outcome == 'success' }}
      id: test
      shell: bash
      run: |
        # Add tests to check the API is working
        echo "API is working"
        exit 0
      continue-on-error: true

    - name: Revert to backup if sync or tests fail
      if: ${{ steps.sync.outcome == 'failure' || steps.test.outcome == 'failure' }}
      shell: bash
      run: |
        deck gateway sync ${{ env.OUTPUT_DIR }}/kong_backup.yaml  \
          --no-mask-deck-env-vars-value \
          --konnect-addr="${{ env.KONNECT_API_URL }}" \
          --konnect-token="${{ inputs.konnect_token }}" \
          --konnect-control-plane-name="${{ env.KONNECT_CONTROL_PLANE_NAME }}"

    - name: Get recent backup
      if: ${{ steps.test.outcome == 'success' }}
      shell: bash
      run: |
        deck gateway dump \
          --yes \
          --select-tag generated_by:apiops \
          --konnect-addr="${{ env.KONNECT_API_URL }}" \
          --konnect-token="${{ inputs.konnect_token }}" \
          --konnect-control-plane-name="${{ env.KONNECT_CONTROL_PLANE_NAME }}" -o ${{ env.OUTPUT_DIR }}/kong_backup.yaml

    - name: Upload backup
      id: upload-backup
      uses: actions/upload-artifact@v4
      with:
        name: backup
        path: ${{ env.OUTPUT_DIR }}/kong_backup.yaml 